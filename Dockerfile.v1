FROM alpine:latest AS builder
WORKDIR /app

RUN apk add --no-cache \
    curl \
    musl-dev \
    g++ \
    cmake \
    make \
    zlib-dev \
    bash

ENV CARGO_HOME=/cargo
ENV RUSTUP_HOME=/rustup
ENV PATH="${CARGO_HOME}/bin:${PATH}"

# Rustup & Rust toolchain
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y && \
    rustup target add x86_64-unknown-linux-musl

# Symlink for toolchain MUSL
RUN ln -s /usr/bin/g++ /usr/bin/x86_64-linux-musl-g++ && \
    ln -s /usr/bin/gcc /usr/bin/x86_64-linux-musl-gcc

COPY Cargo.toml .
COPY Cargo.lock .

# Dummy build to cache dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs && \
    cargo build --target x86_64-unknown-linux-musl --release && \
    rm -rf src

COPY src/ src/
RUN cargo build --target x86_64-unknown-linux-musl --release


FROM alpine:latest
RUN apk add --no-cache libgcc

COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/notification-service /usr/local/bin

WORKDIR /app
ENTRYPOINT ["/usr/local/bin/notification-service"]
