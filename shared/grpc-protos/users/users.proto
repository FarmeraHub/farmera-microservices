syntax = "proto3";

package farmera.users;

import "common/types.proto";
import "common/enums.proto";
import "common/pagination.proto";
// import "common/errors.proto";

option go_package = "github.com/farmera/grpc-protos/users";

// Users service definition
service UsersService {
  // Authentication methods
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse);
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse);
  
  // User management
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc GetUserLite(GetUserLiteRequest) returns (GetUserLiteReponse);
  
  // Email verification
  rpc SendVerificationEmail(SendVerificationEmailRequest) returns (SendVerificationEmailResponse);
  rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse);
  
  // Phone verification
  rpc SendVerificationPhone(SendVerificationPhoneRequest) returns (SendVerificationPhoneResponse);
  rpc VerifyPhone(VerifyPhoneRequest) returns (VerifyPhoneResponse);
  
  // User profile
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);
  // rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse);
  
  // Location management
  rpc AddUserLocation(AddUserLocationRequest) returns (AddUserLocationResponse);
  rpc UpdateUserLocation(UpdateUserLocationRequest) returns (UpdateUserLocationResponse);
  rpc DeleteUserLocation(DeleteUserLocationRequest) returns (DeleteUserLocationResponse);
  rpc GetUserLocations(GetUserLocationsRequest) returns (GetUserLocationsResponse);
  rpc GetLocationById(GetLocationByIdRequest) returns (GetLocationByIdResponse);
  
  // Payment methods
  rpc AddPaymentMethod(AddPaymentMethodRequest) returns (AddPaymentMethodResponse);
  rpc UpdatePaymentMethod(UpdatePaymentMethodRequest) returns (UpdatePaymentMethodResponse);
  rpc DeletePaymentMethod(DeletePaymentMethodRequest) returns (DeletePaymentMethodResponse);
  rpc GetPaymentMethods(GetPaymentMethodsRequest) returns (GetPaymentMethodsResponse);
  
  // Admin methods
  rpc GetUsersByRole(GetUsersByRoleRequest) returns (GetUsersByRoleResponse);
  rpc UpdateUserStatus(UpdateUserStatusRequest) returns (UpdateUserStatusResponse);
  rpc UpdateUserRole(UpdateUserRoleRequest) returns (UpdateUserRoleResponse);
  rpc GetUserStats(GetUserStatsRequest) returns (GetUserStatsResponse);
}

// User message definition
message User {
  string id = 1;
  string email = 2;
  string phone = 3;
  string first_name = 4;
  string last_name = 5;
  optional string farm_id = 6;
  farmera.common.Gender gender = 7;
  optional string avatar_url = 8;
  optional farmera.common.Timestamp birthday = 9;
  farmera.common.UserRole role = 10;
  int32 points = 11;
  farmera.common.UserStatus status = 12;
  optional UserLocationList locations = 13;
  optional PaymentMethodList payment_methods = 14;
  farmera.common.Timestamp created_at = 15;
  farmera.common.Timestamp updated_at = 16;
}

message UserLite {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  optional string farm_id = 5;
  optional string avatar = 6;
}

message UserLocationList {
  repeated farmera.common.UserLocation locations = 1;
}

message PaymentMethodList {
  repeated PaymentMethod payment_methods = 1;
}

// Payment method information
message PaymentMethod {
  int32 id = 1;
  farmera.common.PaymentProvider provider = 2;
  string external_id = 3;
  string last_four = 4;
  string card_type = 5;
  string expiry_date = 6;
  string cardholder_name = 7;
  string billing_address = 8;
  string token = 9;
  bool is_default = 10;
  bool is_active = 12;
  farmera.common.Timestamp created_at = 13;
  farmera.common.Timestamp updated_at = 14;
}

// JWT token information
message TokenInfo {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;           // Seconds until expiration
  string token_type = 4;          // "Bearer"
  repeated string scopes = 5;     // Token scopes/permissions
}

// Authentication requests/responses
message LoginRequest {
  string email = 1;
  string password = 2;
  bool remember_me = 3;
}

message LoginResponse {
  User user = 1;
  TokenInfo token_info = 2;
  bool requires_verification = 3;
  string verification_type = 4; // "email" or "phone"
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  TokenInfo token_info = 1;
}

message LogoutRequest {
  string user_id = 1;
  optional string device_id = 2; // Optional for device-specific logout
}

message LogoutResponse {
  bool success = 1;
}

message ForgotPasswordRequest {
  string email = 1;
}

message ForgotPasswordResponse {
  bool success = 1;
  string message = 2;
}

message UpdatePasswordRequest {
  string email = 1;
  string code = 2;
  string new_password = 3;
}

message UpdatePasswordResponse {
  bool success = 1;
  bool requires_relogin = 2;
}

// User management requests/responses
message CreateUserRequest {
  string email = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string verification_code = 5; // Verification code for pre-verified registration
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string user_id = 1;
  bool include_locations = 2;
  bool include_payment_methods = 3;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string user_id = 1;
  optional string first_name = 2;
  optional string last_name = 3;
  optional farmera.common.Gender gender = 4;
  optional string avatar_url = 5;
  optional farmera.common.Timestamp birthday = 6;
  optional string phone = 7;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string user_id = 1;
  string reason = 2;
  bool hard_delete = 3; // True for permanent deletion
}

message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

message ListUsersRequest {
  farmera.common.PaginationRequest pagination = 1;
  optional farmera.common.UserRole role_filter = 2;
  optional farmera.common.UserStatus status_filter = 3;
  optional string search_query = 4;
  optional farmera.common.TimeRange created_date_range = 5;
}

message ListUsersResponse {
  repeated User users = 1;
  farmera.common.PaginationResponse pagination = 2;
}

// Email verification requests/responses
message SendVerificationEmailRequest {
  string email = 1;
}

message SendVerificationEmailResponse {
  bool success = 1;
  string message = 2;
}

message VerifyEmailRequest {
  string email = 1;
  string verification_code = 2;
  string verification_token = 3;
}

message VerifyEmailResponse {
  bool success = 1;
}

// Phone verification requests/responses
message SendVerificationPhoneRequest {
  string phone = 1;
}

message SendVerificationPhoneResponse {
  bool success = 1;
  string message = 2;
}

message VerifyPhoneRequest {
  string phone = 1;
  string verification_code = 2;
}

message VerifyPhoneResponse {
  bool success = 1;
}

// Profile requests/responses
message GetUserProfileRequest {
  string user_id = 1;
}

message GetUserProfileResponse {
  User user = 1;
  optional ProfileStats stats = 2;
}

message UpdateUserProfileRequest {
  string user_id = 1;
  optional string first_name = 2;
  optional string last_name = 3;
  optional string phone = 4;
  optional farmera.common.Gender gender = 5;
  optional farmera.common.Timestamp birthday = 6;
  optional string avatar_url = 7;
}

message UpdateUserProfileResponse {
  User user = 1;
}

message ProfileStats {
  int32 total_orders = 1;
  int32 total_reviews = 2;
  int32 loyalty_points = 3;
  double total_spent = 4;
  farmera.common.Timestamp member_since = 5;
}

// Location management requests/responses
message AddUserLocationRequest {
  string user_id = 1;
  string city = 2;
  string district = 3;
  string ward = 4;
  string street = 5;
  string address_line = 6;
  string type = 7;
  bool is_primary = 8;
  string name = 9;
  string phone = 10;
}

message AddUserLocationResponse {
  farmera.common.UserLocation location = 1;
}

message UpdateUserLocationRequest {
  string user_id = 1;
  int32 location_id = 2;
  string city = 3;
  string district = 4;
  string ward = 5;
  string street = 6;
  string address_line = 7;
  string type = 8;
  bool is_primary = 9;
  string name = 10;
  string phone = 11;
}

message UpdateUserLocationResponse {
  farmera.common.UserLocation location = 1;
}

message DeleteUserLocationRequest {
  string user_id = 1;
  int32 location_id = 2;
}

message DeleteUserLocationResponse {
  bool success = 1;
}

message GetUserLocationsRequest {
  string user_id = 1;
}

message GetUserLocationsResponse {
  repeated farmera.common.UserLocation locations = 1;
}

// Payment method requests/responses
message AddPaymentMethodRequest {
  string user_id = 1;
  farmera.common.PaymentProvider provider = 2;
  string external_id = 3;
  string last_four = 4;
  string card_type = 5;
  string expiry_date = 6;
  string cardholder_name = 7;
  string billing_address = 8;
  string token = 9;
  bool is_default = 10;
}

message AddPaymentMethodResponse {
  PaymentMethod payment_method = 1;
}

message UpdatePaymentMethodRequest {
  string user_id = 1;
  int32 id = 2;
  farmera.common.PaymentProvider provider = 3;
  string external_id = 4;
  string last_four = 5;
  string card_type = 6;
  string expiry_date = 7;
  string cardholder_name = 8;
  string billing_address = 9;
  string token = 10;
  bool is_default = 11;
  bool is_active = 12;
}

message UpdatePaymentMethodResponse {
  PaymentMethod payment_method = 1;
}

message DeletePaymentMethodRequest {
  string user_id = 1;
  int32 payment_method_id = 2;
}

message DeletePaymentMethodResponse {
  bool success = 1;
}

message GetPaymentMethodsRequest {
  string user_id = 1;
}

message GetPaymentMethodsResponse {
  repeated PaymentMethod payment_methods = 1;
}

// Admin requests/responses
message GetUsersByRoleRequest {
  farmera.common.UserRole role = 1;
  farmera.common.PaginationRequest pagination = 2;
}

message GetUsersByRoleResponse {
  repeated User users = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message UpdateUserStatusRequest {
  string user_id = 1;
  farmera.common.UserStatus status = 2;
  optional string reason = 3;
  optional string admin_id = 4;
}

message UpdateUserStatusResponse {
  User user = 1;
}

message UpdateUserRoleRequest {
  string user_id = 1;
  farmera.common.UserRole role = 2;
  optional string farm_id = 3;
}

message UpdateUserRoleResponse {
  User user = 1;
}

message GetUserStatsRequest {
  optional farmera.common.TimeRange date_range = 1;
  optional farmera.common.UserRole role_filter = 2;
}

message GetUserStatsResponse {
  UserStatistics stats = 1;
}

message UserStatistics {
  int32 total_users = 1;
  int32 active_users = 2;
  int32 new_users_this_month = 3;
  map<string, int32> users_by_role = 4;
  map<string, int32> users_by_status = 5;
  double average_session_duration = 6;
  int32 verified_users = 7;
  int32 unverified_users = 8;
} 

message GetLocationByIdRequest{
  int32 id  = 1;
}
message GetLocationByIdResponse{
  farmera.common.UserLocation location = 1;
}

message GetUserLiteRequest {
  string user_id = 1;
}

message GetUserLiteReponse {
  UserLite user = 1;
}