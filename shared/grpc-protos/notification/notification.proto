syntax = "proto3";

package farmera.notification;

import "common/types.proto";
import "common/enums.proto";
//import "common/pagination.proto";
//import "common/errors.proto";

option go_package = "github.com/farmera/grpc-protos/notification";

// Notification service definition
service NotificationService {
  // Notification management
  rpc CreateNotification(CreateNotificationRequest) returns (CreateNotificationResponse);
  rpc CreateTemplateNotification(CreateTemplateNotificationRequest) returns (CreateTemplateNotificationResponse);
  // rpc GetNotification(GetNotificationRequest) returns (GetNotificationResponse);
  // rpc ListNotifications(ListNotificationsRequest) returns (ListNotificationsResponse);
  // rpc DeleteNotification(DeleteNotificationRequest) returns (DeleteNotificationResponse);
  
  // Template management
  rpc GetTemplate(GetTemplateRequest) returns (GetTemplateResponse);
  rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse);
  //rpc UpdateTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse);
  //rpc DeleteTemplate(DeleteTemplateRequest) returns (DeleteTemplateResponse);
  //rpc ListTemplates(ListTemplatesRequest) returns (ListTemplatesResponse);
  
  // Sending notifications
  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse);
  rpc SendPushNotification(SendPushNotificationRequest) returns (SendPushNotificationResponse);
  rpc SendEmailNotification(SendEmailNotificationRequest) returns (SendEmailNotificationResponse);
  
  // User preferences
  rpc CreateUserPreferences(CreateUserPreferencesRequest) returns (CreateUserPreferencesResponse);
  rpc GetUserPreferences(GetUserPreferencesRequest) returns (GetUserPreferencesResponse);
  rpc UpdateUserPreferences(UpdateUserPreferencesRequest) returns (UpdateUserPreferencesResponse);
  //rpc DeleteUserPreferences(DeleteUserPreferencesRequest) returns (DeleteUserPreferencesResponse);
  
  // Device management
  rpc CreateUserDeviceToken(CreateUserDeviceTokenRequest) returns (CreateUserDeviceTokenResponse);
  rpc GetUserDevices(GetUserDevicesRequest) returns (GetUserDevicesResponse);
  rpc DeleteUserDeviceToken(DeleteUserDeviceTokenRequest) returns (DeleteUserDeviceTokenResponse);
  
  // Notification history and tracking
  //rpc GetNotificationHistory(GetNotificationHistoryRequest) returns (GetNotificationHistoryResponse);
  //rpc MarkNotificationRead(MarkNotificationReadRequest) returns (MarkNotificationReadResponse);
  //rpc GetNotificationStats(GetNotificationStatsRequest) returns (GetNotificationStatsResponse);
}

// Notification message structure
message CreateNotificationRequest {
  string title = 1;
  string content = 2;
  farmera.common.NotificationChannel channel = 3;
}

message CreateNotificationResponse {
  int64 notification_id = 1;
  optional int32 template_id = 2; // Optional i32
  string title = 3;
  string content = 4;
  farmera.common.NotificationChannel channel = 5;
  farmera.common.Timestamp created = 6;
  farmera.common.Timestamp updated = 7;
}

message CreateTemplateNotificationRequest {
  int32 template_id = 1;
  string title = 2;
  map<string, string> props = 3;
  farmera.common.NotificationChannel channel = 4;
}

message CreateTemplateNotificationResponse {
  int64 notification_id = 1;
  optional int32 template_id = 2; // Optional i32
  string title = 3;
  string content = 4;
  farmera.common.NotificationChannel channel = 5;
  farmera.common.Timestamp created = 6;
  farmera.common.Timestamp updated = 7;
}

// Template message structure
message GetTemplateRequest {
  int32 template_id = 1;
}

message GetTemplateResponse {
  int32 template_id = 1;
  string name = 2;
  string content = 3;
  farmera.common.Timestamp created = 4;
  farmera.common.Timestamp updated = 5;
}

message CreateTemplateRequest {
  string name = 1;
  string content = 2;
}

message CreateTemplateResponse {
  int32 template_id = 1;
  string name = 2;
  string content = 3;
  farmera.common.Timestamp created = 4;
  farmera.common.Timestamp updated = 5;
}

// Sending notifications
message SendNotificationRequest {
  optional string recipent = 1;
  farmera.common.NotificationType notification_type = 2;
  repeated farmera.common.NotificationChannel channels = 3;
  farmera.common.NotificationEmail from = 4;
  string title = 5;
  optional string content = 6;
  string content_type = 7;
  optional int32 template_id = 8;
  optional farmera.common.StringMap template_props = 9;
  optional farmera.common.NotificationAttachmentList attachments = 10;
  optional farmera.common.NotificationEmail reply_to = 11;
}

message SendNotificationResponse {
  string message = 1;
  bool success = 2;
}

message SendPushNotificationRequest {
  repeated string recipient = 1;
  farmera.common.PushMessageType type = 2;
  optional int32 template_id = 3;
  optional farmera.common.StringMap template_props = 4;
  string title = 5;
  optional string content = 6;
}

message SendPushNotificationResponse {
  string message = 1;
  bool success = 2;
}

message SendEmailNotificationRequest {
  repeated farmera.common.NotificationEmail to = 1;
  farmera.common.NotificationEmail from = 2;
  optional int32 template_id = 3;
  optional farmera.common.StringMap template_props = 4;
  string subject = 5;
  optional string content = 6;
  string content_type = 7;
  optional farmera.common.NotificationAttachmentList attachments = 8;
  optional farmera.common.NotificationEmail reply_to = 9;
}

message SendEmailNotificationResponse {
  string message = 1;
  bool success = 2;
}

// User preferences management
message CreateUserPreferencesRequest {
  string user_id = 1;
  string user_email = 2;
  
  repeated farmera.common.NotificationChannel transactional_channels = 3;
  repeated farmera.common.NotificationChannel system_alert_channels = 4;
  repeated farmera.common.NotificationChannel chat_channels = 5;

  optional string do_not_disturb_start = 6;
  optional string do_not_disturb_end = 7;

  string time_zone = 8;
}

message CreateUserPreferencesResponse {
  string user_id = 1;
  string user_email = 2;

  repeated farmera.common.NotificationChannel transactional_channels = 3;
  repeated farmera.common.NotificationChannel system_alert_channels = 4;
  repeated farmera.common.NotificationChannel chat_channels = 5;

  optional string do_not_disturb_start = 6;
  optional string do_not_disturb_end = 7;

  string time_zone = 8;
}

message GetUserPreferencesRequest {
  string user_id = 1;
}

message GetUserPreferencesResponse {
  string user_id = 1;
  string user_email = 2;

  repeated farmera.common.NotificationChannel transactional_channels = 3;
  repeated farmera.common.NotificationChannel system_alert_channels = 4;
  repeated farmera.common.NotificationChannel chat_channels = 5;

  optional string do_not_disturb_start = 6;
  optional string do_not_disturb_end = 7;

  string time_zone = 8;
}

message UpdateUserPreferencesRequest {
  string user_id = 1;
  string user_email = 2;

  repeated farmera.common.NotificationChannel transactional_channels = 3;
  repeated farmera.common.NotificationChannel system_alert_channels = 4;
  repeated farmera.common.NotificationChannel chat_channels = 5;

  optional string do_not_disturb_start = 6;
  optional string do_not_disturb_end = 7;

  string time_zone = 8;
}

message UpdateUserPreferencesResponse {
  string user_id = 1;
  string user_email = 2;

  repeated farmera.common.NotificationChannel transactional_channels = 3;
  repeated farmera.common.NotificationChannel system_alert_channels = 4;
  repeated farmera.common.NotificationChannel chat_channels = 5;

  optional string do_not_disturb_start = 6;
  optional string do_not_disturb_end = 7;

  string time_zone = 8;
}

// User device management
message CreateUserDeviceTokenRequest {
  string user_id = 1;
  string device_token = 2;
}

message CreateUserDeviceTokenResponse {
  string user_id = 1;
  string device_token = 2;
}

message GetUserDevicesRequest {
  string user_id = 1;
}

message GetUserDevicesResponse {
  repeated string device_token = 1;
}

message DeleteUserDeviceTokenRequest {
  string user_id = 1;
  string device_token = 2;
}

message DeleteUserDeviceTokenResponse {
  bool success = 1;
}