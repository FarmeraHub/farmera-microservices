syntax = "proto3";

package farmera.products;

import "common/types.proto";
import "common/enums.proto";
import "common/pagination.proto";
import "common/errors.proto";
option go_package = "github.com/farmera/grpc-protos/products";

// Products service definition
service ProductsService {
  // Product management
  //rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  rpc GetListProducts(GetListProductsRequest) returns (GetListProductsResponse);
  //rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  //rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
  //rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
  //rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse);
  //rpc GetProductsByFarm(GetProductsByFarmRequest) returns (GetProductsByFarmResponse);
  //rpc GetProductsByCategory(GetProductsByCategoryRequest) returns (GetProductsByCategoryResponse);
  //rpc UpdateProductStatus(UpdateProductStatusRequest) returns (UpdateProductStatusResponse);
  
  // Farm management
  //rpc CreateFarm(CreateFarmRequest) returns (CreateFarmResponse);
  //rpc GetFarm(GetFarmRequest) returns (GetFarmResponse);
  //rpc UpdateFarm(UpdateFarmRequest) returns (UpdateFarmResponse);
  //rpc DeleteFarm(DeleteFarmRequest) returns (DeleteFarmResponse);
  //rpc ListFarms(ListFarmsRequest) returns (ListFarmsResponse);
  //rpc GetFarmsByLocation(GetFarmsByLocationRequest) returns (GetFarmsByLocationResponse);
  //rpc VerifyFarm(VerifyFarmRequest) returns (VerifyFarmResponse);
  
  // Category management
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
  rpc GetCategory(GetCategoryRequest) returns (GetCategoryResponse);
  //rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse);
  //rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);
  //rpc ListCategories(ListCategoriesRequest) returns (ListCategoriesResponse);
  //rpc GetCategoryTree(GetCategoryTreeRequest) returns (GetCategoryTreeResponse);
  rpc GetAllCategoryWithSubcategory(AllCategoryRequest) returns (ListCategoriesResponse);


  // Review management
  //rpc CreateReview(CreateReviewRequest) returns (CreateReviewResponse);
  //rpc GetReview(GetReviewRequest) returns (GetReviewResponse);
  //rpc UpdateReview(UpdateReviewRequest) returns (UpdateReviewResponse);
  //rpc DeleteReview(DeleteReviewRequest) returns (DeleteReviewResponse);
  //rpc ListReviews(ListReviewsRequest) returns (ListReviewsResponse);
  //rpc GetProductReviews(GetProductReviewsRequest) returns (GetProductReviewsResponse);
  //rpc ApproveReview(ApproveReviewRequest) returns (ApproveReviewResponse);
  
  // Process tracking
  //rpc CreateProcess(CreateProcessRequest) returns (CreateProcessResponse);
  //rpc GetProcess(GetProcessRequest) returns (GetProcessResponse);
  //rpc UpdateProcess(UpdateProcessRequest) returns (UpdateProcessResponse);
  //rpc ListProcesses(ListProcessesRequest) returns (ListProcessesResponse);
  //rpc GetProductProcesses(GetProductProcessesRequest) returns (GetProductProcessesResponse);
  //rpc VerifyProcess(VerifyProcessRequest) returns (VerifyProcessResponse);
  

  // File management
  //rpc UploadProductImage(UploadProductImageRequest) returns (UploadProductImageResponse);
  //rpc UploadProductVideo(UploadProductVideoRequest) returns (UploadProductVideoResponse);
  //rpc DeleteProductMedia(DeleteProductMediaRequest) returns (DeleteProductMediaResponse);
}

// Product message definition
message Product {
  int32 product_id = 1;
  string product_name = 2;
  string description = 3;
  int32 price_per_unit = 4;
  string unit = 5;
  int32 stock_quantity = 6;
  double weight = 7;
  repeated string image_urls = 8;
  repeated string video_urls = 9;
  farmera.common.ProductStatus status = 10;
  farmera.common.Timestamp created = 11;
  farmera.common.Timestamp updated = 12;
  repeated ProductSubcategoryDetail subcategory_details = 13;
  double average_rating = 14;
  int32 total_sold = 15;
  string farm_id = 16;
  //bool is_organic = 18;
  //bool is_seasonal = 19;
  //farmera.common.Timestamp harvest_date = 20;
  //farmera.common.Timestamp expiry_date = 21;
  //string sku = 22;
  //repeated string tags = 23;
  //ProductInventory inventory = 24;
}

// Farm message definition
message Farm {
  string farm_id = 1;
  string farm_name = 2;
  string description = 3;
  string user_id = 4; // User ID of the farm owner
  string email = 5;
  string phone = 6;
  string avatar_url = 7;
  repeated string profile_image_urls = 8;
  repeated string certificate_img_urls = 9 ;
  string tax_number = 10;
  farmera.common.FarmStatus status = 11;
  farmera.common.Timestamp created = 12;
  farmera.common.Timestamp updated = 13;
  Address address = 14;
  Identification identification = 15;
}

message Identification {
  string id = 1;
  farmera.common.IdentificationStatus status = 2;
  farmera.common.IdentificationMethod method = 3;
  string nationality = 4;
  string id_number = 5;
  string full_name = 6;
}

message AddressGHN {
 int32 id = 1;
 int32 province_id = 2;
 int32 district_id = 3;
 string ward_code = 4;
}

message Address {
  int32 address_id = 1;
  string city = 2;
  string district = 3;
  string ward = 4;
  string street = 5;
  string coordinate = 6;
  farmera.common.Timestamp created = 7;
  string farm_id = 8; 
  optional AddressGHN address_ghn = 9;
}

// Category message definition
message Category {
  int32 category_id = 1;
  string name = 2;
  string description = 3;
  string image_url = 4;
  farmera.common.Timestamp created = 5;
}

message Subcategory {
  int32 subcategory_id = 1;
  string name = 2;
  string description = 3;
  farmera.common.Timestamp created = 4;
  Category category = 5;
}
// Product subcategory detail
message ProductSubcategoryDetail {
  int32 id = 1;
  int32 product_id = 2;
  Subcategory subcategory = 3;
}

// Review message definition
message Review {
  int32 review_id = 1;
  int32 product_id = 2;
  string user_id = 3;
  int32 rating = 4; // 1-5 stars
  string comment = 5;
  repeated string images_urls = 6;
  repeated string video_urls = 7;
  bool seller_approved = 8;
  farmera.common.Timestamp created = 9;
  bool is_deleted = 10;
  int32 order_detail_id = 11; // Reference to purchase order
}

// Review reply
message ReviewReply {
  int32 id = 1;
  string user_id = 2;
  string reply = 3;
  farmera.common.Timestamp created = 4;
  int32 review_id = 5;  
}

// Product process tracking
message ProductProcess {
  int32 process_id = 1;
  int32 product_id = 2;
  string process_name = 3;
  string description = 4;
  farmera.common.Timestamp process_date = 5;
  string location = 6;
  repeated farmera.common.Image images = 7;
  repeated farmera.common.Video videos = 8;
  bool is_verified = 9;
  string verified_by = 10;
  farmera.common.Timestamp verified_at = 11;
  map<string, string> metadata = 12;
  string blockchain_hash = 13; // For blockchain verification
}



// Product inventory tracking
message ProductInventory {
  int32 available_quantity = 1;
  int32 reserved_quantity = 2;
  int32 total_quantity = 3;
  farmera.common.Timestamp last_updated = 4;
  string warehouse_location = 5;
  int32 reorder_point = 6;
  int32 max_stock_level = 7;
}

// Farm statistics
message FarmStatistics {
  int32 total_products = 1;
  int32 active_products = 2;
  double average_rating = 3;
  int32 total_reviews = 4;
  int32 total_orders = 5;
  double total_revenue = 6;
  farmera.common.Timestamp last_harvest = 7;
}

// Product management requests/responses
message CreateProductRequest {
  string farm_id = 1;
  string product_name = 2;
  string description = 3;
  farmera.common.Money price_per_unit = 4;
  farmera.common.Unit unit = 5;
  int32 stock_quantity = 6;
  repeated int32 subcategory_ids = 7;
  repeated string image_urls = 8;
  repeated string video_urls = 9;
  bool is_organic = 10;
  bool is_seasonal = 11;
  farmera.common.Timestamp harvest_date = 12;
  farmera.common.Timestamp expiry_date = 13;
  repeated string tags = 14;
  string sku = 15;
}

message CreateProductResponse {
  Product product = 1;
}

message GetProductRequest {
  int32 product_id = 1;
  optional bool include_farm = 2;
}

message GetProductResponse {
  Product product = 1;
}

message UpdateProductRequest {
  int32 product_id = 1;
  optional string product_name = 2;
  optional string description = 3;
  optional farmera.common.Money price_per_unit = 4;
  optional int32 stock_quantity = 5;
  repeated string image_urls = 6;
  repeated string video_urls = 7;
  repeated string tags = 8;
  optional bool is_organic = 9;
  optional farmera.common.Timestamp expiry_date = 10;
}

message UpdateProductResponse {
  Product product = 1;
}

message DeleteProductRequest {
  int32 product_id = 1;
  string reason = 2;
}

message DeleteProductResponse {
  bool success = 1;
}

message ListProductsRequest {
  farmera.common.PaginationRequest pagination = 1;
  repeated farmera.common.SortOption sort = 2;
  optional farmera.common.ProductStatus status_filter = 3;
  optional string farm_id_filter = 4;
  optional int32 category_id_filter = 5;
  optional string search_query = 6;
  optional farmera.common.GeoLocation location_filter = 7;
  optional bool organic_only = 8;
  optional farmera.common.TimeRange price_range = 9;
}

message ListProductsResponse {
  repeated Product products = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message SearchProductsRequest {
  string query = 1;
  farmera.common.PaginationRequest pagination = 2;
  repeated string filters = 3; // "organic", "local", "seasonal", etc.
  optional farmera.common.GeoLocation location = 4;
  optional double max_distance_km = 5;
}

message SearchProductsResponse {
  repeated Product products = 1;
  farmera.common.PaginationResponse pagination = 2;
  repeated string suggested_queries = 3;
}

message GetProductsByFarmRequest {
  string farm_id = 1;
  farmera.common.PaginationRequest pagination = 2;
  optional farmera.common.ProductStatus status_filter = 3;
}

message GetProductsByFarmResponse {
  repeated Product products = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message GetProductsByCategoryRequest {
  int32 category_id = 1;
  farmera.common.PaginationRequest pagination = 2;
  bool include_subcategories = 3;
}

message GetProductsByCategoryResponse {
  repeated Product products = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message UpdateProductStatusRequest {
  int32 product_id = 1;
  farmera.common.ProductStatus status = 2;
  string reason = 3;
  string updated_by = 4;
}

message UpdateProductStatusResponse {
  Product product = 1;
}

// Farm management requests/responses
message CreateFarmRequest {
  string farm_name = 1;
  string description = 2;
  string owner_id = 3;
  farmera.common.Location location = 4;
  farmera.common.ContactInfo contact_info = 5;
  repeated farmera.common.CertificationType certifications = 6;
  repeated farmera.common.OperatingHours operating_hours = 7;
  farmera.common.Timestamp established_date = 8;
  string license_number = 9;
  double farm_size_hectares = 10;
  repeated string farming_methods = 11;
}

message CreateFarmResponse {
  Farm farm = 1;
}

message GetFarmRequest {
  string farm_id = 1;
  bool include_products = 2;
  bool include_statistics = 3;
}

message GetFarmResponse {
  Farm farm = 1;
  repeated Product products = 2; // If include_products is true
}

message UpdateFarmRequest {
  string farm_id = 1;
  optional string farm_name = 2;
  optional string description = 3;
  optional farmera.common.ContactInfo contact_info = 4;
  repeated farmera.common.OperatingHours operating_hours = 5;
  repeated string farming_methods = 6;
  repeated string image_urls = 7;
}

message UpdateFarmResponse {
  Farm farm = 1;
}

message DeleteFarmRequest {
  string farm_id = 1;
  string reason = 2;
}

message DeleteFarmResponse {
  bool success = 1;
}

message ListFarmsRequest {
  farmera.common.PaginationRequest pagination = 1;
  repeated farmera.common.SortOption sort = 2;
  optional bool verified_only = 3;
  optional bool active_only = 4;
  optional string search_query = 5;
  optional farmera.common.GeoLocation location_filter = 6;
}

message ListFarmsResponse {
  repeated Farm farms = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message GetFarmsByLocationRequest {
  farmera.common.GeoLocation location = 1;
  double radius_km = 2;
  farmera.common.PaginationRequest pagination = 3;
}

message GetFarmsByLocationResponse {
  repeated Farm farms = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message VerifyFarmRequest {
  string farm_id = 1;
  bool is_verified = 2;
  string verified_by = 3;
  string verification_notes = 4;
}

message VerifyFarmResponse {
  Farm farm = 1;
}

// Category management requests/responses
message CreateCategoryRequest {
  string name = 1;
  optional string description = 2;
  bytes category_icon_data = 3;
  optional string icon_filename = 4;
  optional string icon_mime_type = 5;

}

message CreateCategoryResponse {
  Category category = 1;
}

message GetCategoryRequest {
  int32 category_id = 1;
  bool include_subcategories = 2;
  bool include_product_count = 3;
}

message GetCategoryResponse {
  Category category = 1;
}

message UpdateCategoryRequest {
  int32 category_id = 1;
  optional string name = 2;
  optional string description = 3;
  optional string icon_url = 4;
  optional string banner_url = 5;
  optional int32 sort_order = 6;
  optional bool is_active = 7;
}

message UpdateCategoryResponse {
  Category category = 1;
}

message DeleteCategoryRequest {
  int32 category_id = 1;
  bool move_products_to_parent = 2;
}

message DeleteCategoryResponse {
  bool success = 1;
  int32 moved_products_count = 2;
}

message ListCategoriesRequest {
  farmera.common.PaginationRequest pagination = 1;
  optional int32 parent_category_id = 2;
  optional bool active_only = 3;
  bool include_product_count = 4;
}

message ListCategoriesResponse {
  repeated Category categories = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message GetCategoryTreeRequest {
  optional int32 root_category_id = 1; // If not provided, returns full tree
  int32 max_depth = 2;
  bool include_product_count = 3;
}

message GetCategoryTreeResponse {
  repeated Category categories = 1;
}

// Review management requests/responses
message CreateReviewRequest {
  int32 product_id = 1;
  string user_id = 2;
  int32 rating = 3;
  string title = 4;
  string comment = 5;
  repeated string image_urls = 6;
  string order_id = 7;
}

message CreateReviewResponse {
  Review review = 1;
}

message GetReviewRequest {
  int32 review_id = 1;
  bool include_replies = 2;
}

message GetReviewResponse {
  Review review = 1;
}

message UpdateReviewRequest {
  int32 review_id = 1;
  optional int32 rating = 2;
  optional string title = 3;
  optional string comment = 4;
  repeated string image_urls = 5;
}

message UpdateReviewResponse {
  Review review = 1;
}

message DeleteReviewRequest {
  int32 review_id = 1;
  string user_id = 2;
  string reason = 3;
}

message DeleteReviewResponse {
  bool success = 1;
}

message ListReviewsRequest {
  farmera.common.PaginationRequest pagination = 1;
  repeated farmera.common.SortOption sort = 2;
  optional int32 product_id_filter = 3;
  optional string user_id_filter = 4;
  optional farmera.common.ReviewStatus status_filter = 5;
  optional int32 min_rating = 6;
  optional int32 max_rating = 7;
}

message ListReviewsResponse {
  repeated Review reviews = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message GetProductReviewsRequest {
  int32 product_id = 1;
  farmera.common.PaginationRequest pagination = 2;
  optional int32 rating_filter = 3;
  bool verified_purchases_only = 4;
}

message GetProductReviewsResponse {
  repeated Review reviews = 1;
  farmera.common.PaginationResponse pagination = 2;
  farmera.common.Rating rating_summary = 3;
}

message ApproveReviewRequest {
  int32 review_id = 1;
  bool approved = 2;
  string moderator_id = 3;
  string notes = 4;
}

message ApproveReviewResponse {
  Review review = 1;
}

// Process tracking requests/responses
message CreateProcessRequest {
  int32 product_id = 1;
  string process_name = 2;
  string description = 3;
  farmera.common.Timestamp process_date = 4;
  string location = 5;
  repeated string image_urls = 6;
  repeated string video_urls = 7;
  map<string, string> metadata = 8;
}

message CreateProcessResponse {
  ProductProcess process = 1;
}

message GetProcessRequest {
  int32 process_id = 1;
}

message GetProcessResponse {
  ProductProcess process = 1;
}

message UpdateProcessRequest {
  int32 process_id = 1;
  optional string description = 2;
  optional string location = 3;
  repeated string image_urls = 4;
  repeated string video_urls = 5;
  map<string, string> metadata = 6;
}

message UpdateProcessResponse {
  ProductProcess process = 1;
}

message ListProcessesRequest {
  farmera.common.PaginationRequest pagination = 1;
  optional int32 product_id_filter = 2;
  optional bool verified_only = 3;
  optional farmera.common.TimeRange date_range = 4;
}

message ListProcessesResponse {
  repeated ProductProcess processes = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message GetProductProcessesRequest {
  int32 product_id = 1;
  farmera.common.PaginationRequest pagination = 2;
  optional bool verified_only = 3;
}

message GetProductProcessesResponse {
  repeated ProductProcess processes = 1;
  farmera.common.PaginationResponse pagination = 2;
}

message VerifyProcessRequest {
  int32 process_id = 1;
  bool is_verified = 2;
  string verified_by = 3;
  string verification_notes = 4;
  string blockchain_hash = 5;
}

message VerifyProcessResponse {
  ProductProcess process = 1;
}



// File management requests/responses
message UploadProductImageRequest {
  int32 product_id = 1;
  bytes image_data = 2;
  string filename = 3;
  string content_type = 4;
  string alt_text = 5;
}

message UploadProductImageResponse {
  farmera.common.Image image = 1;
}

message UploadProductVideoRequest {
  int32 product_id = 1;
  bytes video_data = 2;
  string filename = 3;
  string content_type = 4;
  string description = 5;
}

message UploadProductVideoResponse {
  farmera.common.Video video = 1;
}

message DeleteProductMediaRequest {
  int32 product_id = 1;
  string media_id = 2;
  string media_type = 3; // "image" or "video"
}

message DeleteProductMediaResponse {
  bool success = 1;
} 

message ProductRequest{
  int32 product_id = 1;
  optional string product_name = 2;
  optional string farm_id = 3;
}

message ProductResponse {
  Product product = 1;
  Farm farm = 2;

}

message GetListProductsResponse{
  repeated ProductResponse products_found = 1; 
}


message GetListProductsRequest{
  repeated ProductRequest products = 1;
}

message AllCategoryRequest{
  
}