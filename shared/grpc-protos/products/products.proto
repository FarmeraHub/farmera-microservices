syntax = "proto3";

package farmera.products;

import "common/types.proto";
import "common/enums.proto";
import "common/pagination.proto";
// import "common/errors.proto";
option go_package = "github.com/farmera/grpc-protos/products";

// Products service definition
service ProductsService {
  // Product management
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  rpc GetListProducts(GetListProductsRequest) returns (GetListProductsResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
  rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse);
  rpc GetProductsByFarm(GetProductsByFarmRequest) returns (GetProductsByFarmResponse);
  rpc GetProductsByCategory(GetProductsByCategoryRequest) returns (GetProductsByCategoryResponse);
  rpc GetProductsBySubCategory(GetProductsBySubCategoryRequest) returns (GetProductsBySubCategoryResponse);
  rpc UpdateProductStatus(UpdateProductStatusRequest) returns (UpdateProductStatusResponse);
  rpc OpenProductForSale(OpenProductForSaleRequest) returns (OpenProductForSaleResponse);
  
  // QR Code and Blockchain functionality
  rpc GenerateQRCode(GenerateQRCodeRequest) returns (GenerateQRCodeResponse);
  rpc ActivateBlockchain(ActivateBlockchainRequest) returns (ActivateBlockchainResponse);
  rpc GetQRCode(GetQRCodeRequest) returns (GetQRCodeResponse);
  
  // Farm management
  rpc CreateFarm(CreateFarmRequest) returns (CreateFarmResponse);
  rpc VerifyFarm(stream VerifyFarmRequest) returns (VerifyFarmResponse);
  rpc GetFarm(GetFarmRequest) returns (GetFarmResponse);
  rpc UpdateFarm(UpdateFarmRequest) returns (UpdateFarmResponse);
  rpc ListFarms(ListFarmsRequest) returns (ListFarmsResponse);
  rpc SearchFarm(SearchFarmRequest) returns (SearchFarmResponse);
  //rpc GetFarmsByLocation(GetFarmsByLocationRequest) returns (GetFarmsByLocationResponse);
  rpc GetFarmByUser(GetFarmByUserRequest) returns (GetFarmByUserResponse);

  // Category management
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
  rpc GetCategory(GetCategoryRequest) returns (GetCategoryResponse);
  //rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse);
  //rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);
  //rpc ListCategories(ListCategoriesRequest) returns (ListCategoriesResponse);
  rpc GetCategoryTree(GetCategoryTreeRequest) returns (GetCategoryTreeResponse);
  rpc GetAllCategoryWithSubcategory(GetAllCategoryWithSubcategoryRequest) returns (GetAllCategoryWithSubcategoryResponse);
  rpc SearchCategory(SearchCategoryRequest) returns (SearchCategoryResponse);

  //Subcategory
  rpc CreateSubcategory(CreateSubcategoryRequest) returns (CreateSubcategoryResponse);
  rpc GetSubcategory(GetSubcategoryRequest) returns (GetSubcategoryResponse);

  
  // Review management
  rpc CreateReview(CreateReviewRequest) returns (CreateReviewResponse);
  rpc CreateReply(CreateReplyRequest) returns (CreateReplyResponse);
  rpc UpdateReview(UpdateReviewRequest) returns (UpdateReviewResponse);
  rpc UpdateReply(UpdateReplyRequest) returns (UpdateReplyResponse);
  rpc DeleteReview(DeleteReviewRequest) returns (DeleteReviewResponse);
  rpc DeleteReply(DeleteReplyRequest) returns (DeleteReplyResponse);
  rpc ApproveReview(ApproveReviewRequest) returns (ApproveReviewResponse);
  rpc ListReviews(ListReviewsRequest) returns (ListReviewsResponse);
  rpc GetReviewOverview(GetReviewOverviewRequest) returns (GetReviewOverviewResponse);
  
  // Process tracking
  rpc CreateProcess(CreateProcessRequest) returns (CreateProcessResponse);
  rpc GetProcess(GetProcessRequest) returns (GetProcessResponse);
  rpc ListProcesses(ListProcessesRequest) returns (ListProcessesResponse);  
  
  // Process Template management
  rpc CreateProcessTemplate(CreateProcessTemplateRequest) returns (CreateProcessTemplateResponse);
  rpc GetProcessTemplatesByFarm(GetProcessTemplatesByFarmRequest) returns (GetProcessTemplatesByFarmResponse);
  rpc GetProcessTemplateById(GetProcessTemplateByIdRequest) returns (GetProcessTemplateByIdResponse);
  rpc UpdateProcessTemplate(UpdateProcessTemplateRequest) returns (UpdateProcessTemplateResponse);
  rpc DeleteProcessTemplate(DeleteProcessTemplateRequest) returns (DeleteProcessTemplateResponse);
  rpc GetProcessSteps(GetProcessStepsRequest) returns (GetProcessStepsResponse);
  rpc ReorderProcessSteps(ReorderProcessStepsRequest) returns (ReorderProcessStepsResponse);
  
  // Product Process Assignment
  rpc AssignProductToProcess(AssignProductToProcessRequest) returns (AssignProductToProcessResponse);
  rpc GetProductProcessAssignment(GetProductProcessAssignmentRequest) returns (GetProductProcessAssignmentResponse);
  rpc UnassignProductFromProcess(UnassignProductFromProcessRequest) returns (UnassignProductFromProcessResponse);
  
  // Diary management
  rpc CreateDiary(CreateDiaryRequest) returns (CreateDiaryResponse);
  rpc GetDiary(GetDiaryRequest) returns (GetDiaryResponse);
  rpc GetDiariesByProcess(GetDiariesByProcessRequest) returns (GetDiariesByProcessResponse);
  rpc UpdateDiary(UpdateDiaryRequest) returns (UpdateDiaryResponse);
  rpc DeleteDiary(DeleteDiaryRequest) returns (DeleteDiaryResponse);
  
  // Step Diary management
  rpc CreateStepDiary(CreateStepDiaryRequest) returns (CreateStepDiaryResponse);
  rpc GetStepDiaries(GetStepDiariesRequest) returns (GetStepDiariesResponse);
  rpc GetProductDiaries(GetProductDiariesRequest) returns (GetProductDiariesResponse);

  // Admin
  rpc UpdateProductStatusForAdmin(UpdateProductStatusForAdminRequest) returns (UpdateProductStatusForAdminResponse);
  rpc UpdateFarmStatus(UpdateFarmStatusRequest) returns (UpdateFarmStatusResponse);
  rpc SearchFarmForAdmin(SearchFarmForAdminRequest) returns (SearchFarmForAdminResponse);

}

// ======================================Product==========================================
message Product {
  int32 product_id = 1;
  string product_name = 2;
  string description = 3;
  double price_per_unit = 4;
  string unit = 5;
  int32 stock_quantity = 6;
  double weight = 7;
  optional farmera.common.StringList image_urls = 8;
  optional farmera.common.StringList video_urls = 9;
  farmera.common.ProductStatus status = 10;
  farmera.common.Timestamp created = 11;
  farmera.common.Timestamp updated = 12;
  optional SubcategoryList subcategories = 13;
  double average_rating = 14;
  int32 total_sold = 15;
  optional Farm farm = 16;
  optional ProcessList processes = 17;
}

message SubcategoryList {
  repeated SubcategoryLite subcategories = 1;
}

message ProcessList {
  repeated ProductProcessLite process = 1;
}

message CreateProductRequest {
  string user_id = 1;
  string product_name = 2;
  string description = 3;
  double price_per_unit = 4;
  string unit = 5;
  int32 stock_quantity = 6;
  double weight = 7;
  optional farmera.common.StringList image_urls = 8;
  optional farmera.common.StringList video_urls = 9;
  repeated int32 subcategory_ids = 10;
}

message CreateProductResponse {
  Product product = 1;
}

message GetProductRequest {
  int32 product_id = 1;
  optional farmera.common.ProductOptions options = 2;
}

message GetProductResponse {
  Product product = 1;
}

message GetListProductsRequest{
  repeated int32 product_ids = 1;
  optional farmera.common.PaginationRequest pagination = 2;
  optional farmera.common.ProductOptions options = 3;
}

message GetListProductsResponse{
  repeated Product products = 1;
  optional farmera.common.PaginationResponse pagination = 2; 
}

message UpdateProductRequest {
  int32 product_id = 1;
  string user_id = 2;
  string product_name = 3;
  string description = 4;
  double price_per_unit = 5;
  string unit = 6;
  int32 stock_quantity = 7;
  double weight = 8;
  optional farmera.common.StringList image_urls = 9;
  optional farmera.common.StringList video_urls = 10;
}

message UpdateProductResponse {
  Product product = 1;
}

message DeleteProductRequest {
  int32 product_id = 1;
  string user_id = 2;
}

message DeleteProductResponse {
  bool success = 1;
}

message SearchProductsRequest {
  string query = 1;
  optional farmera.common.PaginationRequest pagination = 2;
  optional double min_price = 3;
  optional double max_price = 4;
  optional int32 min_rating = 5;
  optional int32 max_rating = 6;
  optional int32 min_total_sold = 7; 
  optional int32 subcategories_id = 8;
  optional bool is_category = 9;
  optional farmera.common.ProductStatus status = 10;
  optional farmera.common.ProductOptions options = 11;


}

message SearchProductsResponse {
  repeated Product products = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message GetProductsByFarmRequest {
  string farm_id = 1;
  optional farmera.common.ProductOptions options = 2;
  optional farmera.common.PaginationRequest pagination = 3;
}

message GetProductsByFarmResponse {
  repeated Product products = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message GetProductsByCategoryRequest {
  int32 category_id = 1;
  optional farmera.common.PaginationRequest pagination = 2;
  optional farmera.common.ProductOptions options = 3;
}

message GetProductsByCategoryResponse {
  repeated Product products = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message GetProductsBySubCategoryRequest {
  int32 subcategory_id = 1;
  optional farmera.common.PaginationRequest pagination = 2;
  optional farmera.common.ProductOptions options = 3;
}

message GetProductsBySubCategoryResponse {
  repeated Product products = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message UpdateProductStatusRequest {
  int32 product_id = 1;
  string user_id = 2;
  farmera.common.ProductStatus status = 10;
}

message UpdateProductStatusResponse {
  bool success = 1;
}

message OpenProductForSaleRequest {
  int32 product_id = 1;
  string user_id = 2;
}

message OpenProductForSaleResponse {
  string qr_code = 1;
}

// ==================================Admin==================================
message UpdateProductStatusForAdminRequest {
  int32 product_id = 1;
  farmera.common.ProductStatus status = 2;
}

message UpdateProductStatusForAdminResponse {
  bool success = 1;
}

message UpdateFarmStatusRequest{
  string farm_id = 1;
  string user_id = 2;
  string status = 3;
  optional string reason = 4;
 }

message UpdateFarmStatusResponse{
  Farm farm = 1;
}

// ==================================Farm==================================
// Farm
message Farm {
  string farm_id = 1;
  string farm_name = 2;
  string description = 3;
  string user_id = 4; // User ID of the farm owner
  string email = 5;
  string phone = 6;
  string avatar_url = 7;
  repeated string profile_image_urls = 8;
  repeated string certificate_img_urls = 9 ;
  string tax_number = 10;
  farmera.common.FarmStatus status = 11;
  farmera.common.Timestamp created = 12;
  farmera.common.Timestamp updated = 13;
  optional Address address = 14;
  optional Identification identification = 15;
}

message Identification {
  string id = 1;
  farmera.common.IdentificationStatus status = 2;
  farmera.common.IdentificationMethod method = 3;
  string nationality = 4;
  string id_number = 5;
  string full_name = 6;
}

message AddressGHN {
 int32 id = 1;
 int32 province_id = 2;
 int32 district_id = 3;
 string ward_code = 4;
}

message Address {
  int32 address_id = 1;
  string city = 2;
  string district = 3;
  string ward = 4;
  string street = 5;
  string coordinate = 6;
  farmera.common.Timestamp created = 7;
  string farm_id = 8; 
  optional AddressGHN address_ghn = 9;
}

message CreateFarmRequest {
  string farm_name = 1;
  string description = 2;
  string email = 3;
  string phone = 4;
  string tax_number = 5;
  string city = 6;
  string district = 7;
  string ward = 8;
  string street = 9;
  string coordinate = 10;
  string user_id = 11;
}

message CreateFarmResponse {
  Farm farm = 1;
}

message VerifyFarmRequest {
  oneof test_oneof {
    VerifyFileMetadata meta = 2;
    ImageChunk chunk = 1;
  }
}

message VerifyFileMetadata{
  string file_name = 1;
  string file_type = 2;
  int64 total_size = 3;
  string file_id = 4;
  string farm_id = 5; 
  string mime_type = 6;
  string user_id = 7;
}

message ImageChunk {
  string file_id = 1;
  bytes data = 2;
}

message VerifyFarmResponse {
  Farm farm = 1;
  farmera.common.VerifyStatusCode status = 2;
  optional string message = 3;
}

message GetFarmRequest {
  string farm_id = 1;
}

message GetFarmResponse {
  Farm farm = 1;
}

message UpdateFarmRequest {
  string farm_id = 1;
  optional string farm_name = 2;
  optional string description = 3;
}

message UpdateFarmResponse {
  Farm farm = 1;
}

message ListFarmsRequest {
  optional farmera.common.PaginationRequest pagination = 1;
}

message ListFarmsResponse {
  repeated Farm farms = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message SearchFarmRequest {
  optional string search_query = 1;
  optional farmera.common.PaginationRequest pagination = 2;
  optional bool approved_only = 3;
  optional farmera.common.GeoLocation location_filter = 4;
}

message SearchFarmResponse {
  repeated Farm farms = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message SearchFarmForAdminRequest {
  optional string search_query = 1;
  optional farmera.common.PaginationRequest pagination = 2;
  optional farmera.common.FarmStatus status_filter = 3;
  optional farmera.common.GeoLocation location_filter = 4;
}

message SearchFarmForAdminResponse {
  repeated Farm farms = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message GetFarmByUserRequest{
  string user_id = 1;
}

message GetFarmByUserResponse {
  Farm farm = 1;
}

// ======================================Category============================================
// Category message definition
message Category {
  int32 category_id = 1;
  string name = 2;
  optional string description = 3;
  string image_url = 4;
  farmera.common.Timestamp created = 5;
}

message Subcategory {
  int32 subcategory_id = 1;
  string name = 2;
  optional string description = 3;
  farmera.common.Timestamp created = 4;
  Category category = 5;
}

message SubcategoryLite  {
  int32 subcategory_id = 1;
  string name = 2;
  optional string description = 3;
  farmera.common.Timestamp created = 4;
}

message CategoryWithSub {
  int32 category_id = 1;
  string name = 2;
  optional string description = 3;
  string image_url = 4;
  farmera.common.Timestamp created = 5;
  repeated SubcategoryLite subcategories = 6;
}

message CreateCategoryRequest {
  string name = 1;
  optional string description = 2;
  optional string category_icon_url = 3;
}

message CreateCategoryResponse {
  Category category = 1;
}

message GetCategoryRequest {
  int32 category_id = 1;
}

message GetCategoryResponse {
  Category category = 1;
}

message GetCategoryTreeRequest {
  int32 category_id = 1;
}

message GetCategoryTreeResponse {
  Category category = 1;
  repeated SubcategoryLite sublist = 2;
}

message CreateSubcategoryRequest {
  string name = 1;
  optional string description = 2;
  int32 category_id = 3;
}

message CreateSubcategoryResponse{
  Subcategory subcategory = 1;
}

message GetSubcategoryResponse{
  Subcategory subcategory = 1;
}

message GetSubcategoryRequest {
  int32 subcategory_id = 1;
}

message GetAllCategoryWithSubcategoryRequest {
  optional farmera.common.PaginationRequest pagination = 1;
}

message GetAllCategoryWithSubcategoryResponse {
  repeated CategoryWithSub category = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

message SearchCategoryRequest {
  string name = 1;
  optional farmera.common.PaginationRequest pagination = 2;
}

message SearchCategoryResponse {
  repeated CategoryWithSub category = 1;
  optional farmera.common.PaginationResponse pagination = 2;
}

// ====================================Review=============================================
message Review {
  int32 review_id = 1;
  int32 product_id = 2;
  string user_id = 3;
  int32 rating = 4; // 1-5 stars
  string comment = 5;
  optional farmera.common.StringList images_urls = 6;
  optional farmera.common.StringList video_urls = 7;
  bool seller_approved = 8;
  farmera.common.Timestamp created = 9;
  int32 order_detail_id = 10; // Reference to purchase order
  optional ReplyList replies = 11;
}

message ReviewReply {
  int32 id = 1;
  string user_id = 2;
  string reply = 3;
  farmera.common.Timestamp created = 4;
}

message ReplyList {
  repeated ReviewReply replies = 1;
}

message CreateReviewRequest {
  int32 product_id = 1;
  string user_id = 2;
  int32 rating = 3;
  string comment = 5;
  optional farmera.common.StringList image_urls = 6;
  optional farmera.common.StringList video_urls = 7;
}

message CreateReviewResponse {
  Review review = 1;
}

message CreateReplyRequest {
  int32 review_id = 1;
  string reply = 2;
  string user_id = 3;
}

message CreateReplyResponse {
  ReviewReply reply = 1;
}

message UpdateReviewRequest {
  int32 review_id = 1;
  string user_id = 2;
  int32 rating = 3;
  string comment = 4;
  optional farmera.common.StringList image_urls = 5;
  optional farmera.common.StringList video_urls = 6;
}

message UpdateReviewResponse {
  Review review = 1;
}

message UpdateReplyRequest {
  int32 reply_id = 1;
  string user_id = 2;
  string reply = 3;
}

message UpdateReplyResponse {
  ReviewReply reply = 1;
}

message DeleteReviewRequest {
  int32 review_id = 1;
  string user_id = 2;
}

message DeleteReviewResponse {
  bool success = 1;
}

message DeleteReplyRequest {
  int32 reply_id = 1;
  string user_id = 2;
}

message DeleteReplyResponse {
  bool success = 1;
}

message ApproveReviewRequest {
  int32 review_id = 1;
  bool approved = 2;
}

message ApproveReviewResponse {
  bool success = 1;
}

message ListReviewsRequest {
  int32 product_id = 1;
  farmera.common.SimpleCursorPaginationRequest pagination = 3;
  optional int32 rating_filter = 4;
}

message ListReviewsResponse {
  repeated Review reviews = 1;
  farmera.common.SimpleCursorPaginationResponse pagination = 2;
}

message RatingOverview {
  int32 count = 1;
  double percentage = 2;
}

message GetReviewOverviewRequest {
  int32 product_id = 1;
}

message GetReviewOverviewResponse {
  int32 total_count = 1;
  int32 total_ratings = 2;
  double average_rating = 3;
  map<int32, RatingOverview> rating_overview = 4;
}

// ========================================Process=======================================
// Product process tracking
message ProductProcess {
  int32 process_id = 1;
  int32 product_id = 2;
  farmera.common.ProcessStage stage_name = 3;
  map<string, string> description = 4;
  repeated string image_urls = 5;
  optional farmera.common.StringList video_urls = 6;
  farmera.common.Timestamp start_date = 7;
  farmera.common.Timestamp end_date = 8;
  int32 latitude = 9;
  int32 longitude = 10;
  farmera.common.Timestamp created = 11;
}

// without product mapping
message ProductProcessLite {
  int32 process_id = 1;
  farmera.common.ProcessStage stage_name = 2;
  map<string, string> description = 3;
  repeated string image_urls = 4;
  optional farmera.common.StringList video_urls = 5;
  farmera.common.Timestamp start_date = 6;
  farmera.common.Timestamp end_date = 7;
  int32 latitude = 8;
  int32 longitude = 9;
  farmera.common.Timestamp created = 10;
}

message CreateProcessRequest {
  int32 product_id = 1;
  farmera.common.ProcessStage stage_name = 2;
  map<string, string> description = 3;
  farmera.common.Timestamp start_date = 4;
  farmera.common.Timestamp end_date = 5;
  int32 latitude = 6;
  int32 longitude = 7;
  repeated string image_urls = 8;
  optional farmera.common.StringList video_urls = 9;
  string user_id = 10;
}

message CreateProcessResponse {
  ProductProcess process = 1;
}

message GetProcessRequest {
  int32 process_id = 1;
}

message GetProcessResponse {
  ProductProcess process = 1;
}

message ListProcessesRequest {
  int32 product_id = 1;
}

message ListProcessesResponse {
  repeated ProductProcess processes = 1;
}

// QR Code and Blockchain message definitions
message GenerateQRCodeRequest {
  int32 product_id = 1;
  string user_id = 2;
}

message GenerateQRCodeResponse {
  string qr_code = 1;
}

message ActivateBlockchainRequest {
  int32 product_id = 1;
  string user_id = 2;
}

message ActivateBlockchainResponse {
  string blockchain_hash = 1;
  bool success = 2;
}

message GetQRCodeRequest {
  int32 product_id = 1;
}

message GetQRCodeResponse {
  optional string qr_code = 1;
}

// =========================================Diary========================================
message Diary {
  int32 diary_id = 1;
  int32 process_id = 2;
  string step_name = 3;
  string step_description = 4;
  optional farmera.common.StringList image_urls = 5;
  optional farmera.common.StringList video_urls = 6;
  farmera.common.Timestamp recorded_date = 7;
  optional double latitude = 8;
  optional double longitude = 9;
  optional string notes = 10;
  farmera.common.Timestamp created = 11;
}

message CreateDiaryRequest {
  int32 process_id = 1;
  string step_name = 2;
  string step_description = 3;
  optional farmera.common.StringList image_urls = 4;
  optional farmera.common.StringList video_urls = 5;
  farmera.common.Timestamp recorded_date = 6;
  optional double latitude = 7;
  optional double longitude = 8;
  optional string notes = 9;
  string user_id = 10;
}

message CreateDiaryResponse {
  Diary diary = 1;
}

message GetDiaryRequest {
  int32 diary_id = 1;
}

message GetDiaryResponse {
  Diary diary = 1;
}

message GetDiariesByProcessRequest {
  int32 process_id = 1;
}

message GetDiariesByProcessResponse {
  repeated Diary diaries = 1;
}

message UpdateDiaryRequest {
  int32 diary_id = 1;
  optional string step_name = 2;
  optional string step_description = 3;
  optional farmera.common.StringList image_urls = 4;
  optional farmera.common.StringList video_urls = 5;
  optional farmera.common.Timestamp recorded_date = 6;
  optional double latitude = 7;
  optional double longitude = 8;
  optional string notes = 9;
  string user_id = 10;
}

message UpdateDiaryResponse {
  Diary diary = 1;
}

message DeleteDiaryRequest {
  int32 diary_id = 1;
  string user_id = 2;
}

message DeleteDiaryResponse {
  bool success = 1;
}

// ======================================Process Templates===============================
// Process Template messages
message ProcessTemplate {
  int32 process_id = 1;
  string process_name = 2;
  string description = 3;
  string farm_id = 4;
  optional int32 estimated_duration_days = 5;
  bool is_active = 6;
  repeated ProcessStep steps = 7;
  optional int32 step_count = 8;
  farmera.common.Timestamp created = 9;
  farmera.common.Timestamp updated = 10;
}

message ProcessStep {
  int32 step_id = 1;
  int32 process_id = 2;
  int32 step_order = 3;
  string step_name = 4;
  string step_description = 5;
  bool is_required = 6;
  optional int32 estimated_duration_days = 7;
  optional string instructions = 8;
  farmera.common.Timestamp created = 9;
}

message CreateProcessStepInput {
  int32 step_order = 1;
  string step_name = 2;
  string step_description = 3;
  optional bool is_required = 4;
  optional int32 estimated_duration_days = 5;
  optional string instructions = 6;
}

message UpdateProcessStepInput {
  optional int32 step_id = 1;
  optional int32 step_order = 2;
  optional string step_name = 3;
  optional string step_description = 4;
  optional bool is_required = 5;
  optional int32 estimated_duration_days = 6;
  optional string instructions = 7;
}

// Process Template CRUD messages
message CreateProcessTemplateRequest {
  string process_name = 1;
  string description = 2;
  optional int32 estimated_duration_days = 3;
  optional bool is_active = 4;
  repeated CreateProcessStepInput steps = 5;
  string user_id = 6;
}

message CreateProcessTemplateResponse {
  ProcessTemplate template = 1;
}

message GetProcessTemplatesByFarmRequest {
  string user_id = 1;
}

message GetProcessTemplatesByFarmResponse {
  repeated ProcessTemplate templates = 1;
}

message GetProcessTemplateByIdRequest {
  int32 process_id = 1;
  string user_id = 2;
}

message GetProcessTemplateByIdResponse {
  ProcessTemplate template = 1;
}

message UpdateProcessTemplateRequest {
  int32 process_id = 1;
  optional string process_name = 2;
  optional string description = 3;
  optional int32 estimated_duration_days = 4;
  optional bool is_active = 5;
  repeated UpdateProcessStepInput steps = 6;
  string user_id = 7;
}

message UpdateProcessTemplateResponse {
  ProcessTemplate template = 1;
}

message DeleteProcessTemplateRequest {
  int32 process_id = 1;
  string user_id = 2;
}

message DeleteProcessTemplateResponse {
  bool success = 1;
}

message GetProcessStepsRequest {
  int32 process_id = 1;
  string user_id = 2;
}

message GetProcessStepsResponse {
  repeated ProcessStep steps = 1;
}

message StepOrderInput {
  int32 step_id = 1;
  int32 step_order = 2;
}

message ReorderProcessStepsRequest {
  int32 process_id = 1;
  repeated StepOrderInput step_orders = 2;
  string user_id = 3;
}

message ReorderProcessStepsResponse {
  bool success = 1;
}

// Product Process Assignment messages
enum AssignmentStatus {
  ASSIGNMENT_ACTIVE = 0;
  ASSIGNMENT_COMPLETED = 1;
  ASSIGNMENT_CANCELLED = 2;
}

message ProductProcessAssignment {
  int32 assignment_id = 1;
  int32 product_id = 2;
  int32 process_id = 3;
  farmera.common.Timestamp assigned_date = 4;
  AssignmentStatus status = 5;
  optional int32 current_step_order = 6;
  double completion_percentage = 7;
  optional farmera.common.Timestamp start_date = 8;
  optional farmera.common.Timestamp target_completion_date = 9;
  optional farmera.common.Timestamp actual_completion_date = 10;
  farmera.common.Timestamp created = 11;
  farmera.common.Timestamp updated = 12;
  optional ProcessTemplate process_template = 13;
}

message AssignProductToProcessRequest {
  int32 product_id = 1;
  int32 process_id = 2;
  optional farmera.common.Timestamp start_date = 3;
  optional farmera.common.Timestamp target_completion_date = 4;
  string user_id = 5;
}

message AssignProductToProcessResponse {
  ProductProcessAssignment assignment = 1;
}

message GetProductProcessAssignmentRequest {
  int32 product_id = 1;
  string user_id = 2;
}

message GetProductProcessAssignmentResponse {
  optional ProductProcessAssignment assignment = 1;
}

message UnassignProductFromProcessRequest {
  int32 product_id = 1;
  string user_id = 2;
}

message UnassignProductFromProcessResponse {
  bool success = 1;
}

// Step Diary messages
enum DiaryCompletionStatus {
  DIARY_IN_PROGRESS = 0;
  DIARY_COMPLETED = 1;
  DIARY_SKIPPED = 2;
}

message StepDiaryEntry {
  int32 diary_id = 1;
  int32 assignment_id = 2;
  int32 step_id = 3;
  int32 product_id = 4;
  string step_name = 5;
  int32 step_order = 6;
  string notes = 7;
  DiaryCompletionStatus completion_status = 8;
  repeated string image_urls = 9;
  repeated string video_urls = 10;
  farmera.common.Timestamp recorded_date = 11;
  optional double latitude = 12;
  optional double longitude = 13;
  optional string weather_conditions = 14;
  optional int32 quality_rating = 15;
  optional string issues_encountered = 16;
  optional string additional_data = 17; // JSON string
  farmera.common.Timestamp created = 18;
  farmera.common.Timestamp updated = 19;
  optional ProcessStep step = 20;
  optional ProductProcessAssignment assignment = 21;
}

message CreateStepDiaryRequest {
  int32 assignment_id = 1;
  int32 step_id = 2;
  int32 product_id = 3;
  string step_name = 4;
  int32 step_order = 5;
  string notes = 6;
  optional DiaryCompletionStatus completion_status = 7;
  repeated string image_urls = 8;
  repeated string video_urls = 9;
  optional farmera.common.Timestamp recorded_date = 10;
  optional double latitude = 11;
  optional double longitude = 12;
  optional string weather_conditions = 13;
  optional int32 quality_rating = 14;
  optional string issues_encountered = 15;
  optional string additional_data = 16;
  string user_id = 17;
}

message CreateStepDiaryResponse {
  StepDiaryEntry diary = 1;
}

message GetStepDiariesRequest {
  int32 product_id = 1;
  int32 step_id = 2;
  string user_id = 3;
}

message GetStepDiariesResponse {
  repeated StepDiaryEntry diaries = 1;
}

message GetProductDiariesRequest {
  int32 product_id = 1;
  string user_id = 2;
}

message GetProductDiariesResponse {
  repeated StepDiaryEntry diaries = 1;
}