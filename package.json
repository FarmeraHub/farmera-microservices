{
  "name": "farmera-microservices",
  "version": "1.0.0",
  "description": "A comprehensive microservices architecture for agricultural technology platform",
  "scripts": {
    "install:all": "npm install && npm run install:services",
    "install:services": "concurrently \"npm install --prefix services/users-service\" \"npm install --prefix services/products-service\" \"npm install --prefix services/payment-service\"",
    "start:all": "concurrently --names \"users,products,payment,notification,communication\" --prefix-colors \"green,blue,yellow,red,magenta\" \"npm run start:users\" \"npm run start:products\" \"npm run start:payment\" \"npm run start:notification\" \"npm run start:communication\"",
    "start:users": "cd services/users-service && npm run start:dev",
    "start:products": "cd services/products-service && npm run start:dev",
    "start:payment": "cd services/payment-service && npm run start:dev",
    "start:notification": "cd services/notification-service && cargo run",
    "start:communication": "cd services/communication-service && cargo run",
    "dev": "npm run start:all",
    "build:all": "npm run build:node && npm run build:rust",
    "build:node": "concurrently \"npm run build --prefix services/users-service\" \"npm run build --prefix services/products-service\" \"npm run build --prefix services/payment-service\"",
    "build:rust": "concurrently \"cd services/notification-service && cargo build --release\" \"cd services/communication-service && cargo build --release\"",
    "test:all": "npm run test:node && npm run test:rust",
    "test:node": "concurrently \"npm test --prefix services/users-service\" \"npm test --prefix services/products-service\" \"npm test --prefix services/payment-service\"",
    "test:rust": "concurrently \"cd services/notification-service && cargo test\" \"cd services/communication-service && cargo test\"",
    "lint:all": "npm run lint:node",
    "lint:node": "concurrently \"npm run lint --prefix services/users-service\" \"npm run lint --prefix services/products-service\" \"npm run lint --prefix services/payment-service\"",
    "format:all": "npm run format:node && npm run format:rust",
    "format:node": "concurrently \"npm run format --prefix services/users-service\" \"npm run format --prefix services/products-service\" \"npm run format --prefix services/payment-service\"",
    "format:rust": "concurrently \"cd services/notification-service && cargo fmt\" \"cd services/communication-service && cargo fmt\"",
    "grpc:generate": "cd shared/grpc-protos && buf generate",
    "grpc:setup": "powershell -ExecutionPolicy Bypass -File ./tools/setup.ps1",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "db:migrate:users": "cd services/users-service && npm run migration:run",
    "db:migrate:products": "cd services/products-service && npm run migration:run",
    "db:migrate:payment": "cd services/payment-service && npm run migration:run",
    "db:migrate:notification": "cd services/notification-service && diesel migration run",
    "db:migrate:communication": "cd services/communication-service && diesel migration run",
    "db:migrate:all": "concurrently \"npm run db:migrate:users\" \"npm run db:migrate:products\" \"npm run db:migrate:payment\" \"npm run db:migrate:notification\" \"npm run db:migrate:communication\"",
    "clean": "npm run clean:node && npm run clean:rust",
    "clean:node": "concurrently \"cd services/users-service && rm -rf node_modules dist\" \"cd services/products-service && rm -rf node_modules dist\" \"cd services/payment-service && rm -rf node_modules dist\"",
    "clean:rust": "concurrently \"cd services/notification-service && cargo clean\" \"cd services/communication-service && cargo clean\"",
    "health:check": "node tools/health-check.js"
  },
  "workspaces": [
    "services/users-service",
    "services/products-service",
    "services/payment-service"
  ],
  "devDependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/farmera-microservices.git"
  },
  "keywords": [
    "microservices",
    "agriculture",
    "grpc",
    "nestjs",
    "rust",
    "actix-web",
    "postgresql",
    "redis",
    "farming",
    "iot"
  ],
  "author": "Farmera Team",
  "license": "MIT",
  "private": true
}
